/* -------------------------------------------- */
/*                   VARIABLES                  */
/* -------------------------------------------- */

$drawer-duration: 0.295s !default;
$drawer-easing: ease-in-out !default;
$drawer-overlay-z-index: $zindex-drawer + 10 !default;
$drawer-overlay-duration: $drawer-duration !default;
$drawer-overlay-bg: rgba(0, 0, 0, 0.6) !default;
$drawer-directions: (left, right, top, bottom) !default;

/* -------------------------------------------- */
/*                    DRAWER                    */
/* -------------------------------------------- */

@mixin drawer(
  $direction: left,
  $mode: push,
  $width: 100%,
  $height: 100%,
  $background: $white
) {
  width: $width;
  height: $height;
  background-color: $background;

  @include media-breakpoint-up(md) {
    width: $width / 2.5;
  }

  @if ($direction == left) {
    top: 0;
    left: 0;

    @if ($mode == push or $mode == overlay) {
      transform: translateX(-100%);
    }
    @if ($mode == push or $mode == pull) {
      @include drawer-transform-x($width);
    }
  } @else if ($direction == right) {
    top: 0;
    right: 0;

    @if ($mode == push or $mode == overlay) {
      transform: translateX(100%);
    }
    @if ($mode == push or $mode == pull) {
      @include drawer-transform-x($width * -1);
    }
  } @else if ($direction == top) {
    top: 0;
    left: 0;

    @if ($mode == push or $mode == overlay) {
      transform: translateY(-100%);
    }
    @if ($mode == push or $mode == pull) {
      @include drawer-transform-y($height);
    }
  } @else if ($direction == bottom) {
    bottom: 0;
    left: 0;

    @if ($mode == push or $mode == overlay) {
      transform: translateY(100%);
    }
    @if ($mode == push or $mode == pull) {
      @include drawer-transform-y($height * -1);
    }
  }

  @if ($mode == overlay or $direction == top or $direction == bottom) {
    z-index: $zindex-drawer + 20;
  } @else {
    z-index: $zindex-drawer;
  }

  @if ($mode == push or $mode == pull or $mode == overlay) {
    transition: visibility 0s linear $drawer-duration,
      opacity 0.05s linear $drawer-duration,
      transform $drawer-duration $drawer-easing;
  }

  &.drawer-active {
    transition: opacity 0.05s, transform $drawer-duration $drawer-easing;
  }
}

@mixin drawer-transform-x($width) {
  &.drawer-active ~ .drawer-push,
  &.drawer-active ~ .drawer-overlay,
  &.drawer-active ~ .wrapper {
    transform: translateX($width);
  }
}

@mixin drawer-transform-y($height) {
  &.drawer-active ~ .drawer-push,
  &.drawer-active ~ .drawer-overlay,
  &.drawer-active ~ .wrapper {
    transform: translateY($height);
  }
}

.container-fluid {
  //overflow-x: hidden;
  //position: absolute;
  //top: 0;
  //right: 0;
  //left: 0;
  //	height: 100%;
  //overflow-y: scroll;
  //overscroll-behavior-y: contain;
  //-webkit-transform: translate3d(0, 0, 0);

  .drawer-active & {
    -webkit-transform: translate3d(0, 0, 0);
    -webkit-overflow-scrolling: touch;
    -webkit-tap-highlight-color: transparent;
  }
}

.drawer-push {
  transition: transform $drawer-duration $drawer-easing;
}

.drawer-panel {
  position: fixed;
  z-index: $zindex-drawer;
  overflow-y: scroll;
  visibility: hidden;
  opacity: 0;
  will-change: transform;

  .bd-bottom {
    color: $gray-100;
  }

  .button-close {
    font-weight: 600;
    font-size: 0.695rem;
  }

  .icon-cross {
    width: 15px;
    height: 15px;
  }

  ul > li a {
    font-weight: 500;
    -webkit-tap-highlight-color: rgba(0, 0, 0, 0);
  }
}

@if index($drawer-directions, left) {
  .drawer-left {
    @include drawer(left);
  }
}

@if index($drawer-directions, right) {
  .drawer-right {
    @include drawer(right);
  }
}

@if index($drawer-directions, top) {
  .drawer-top {
    @include drawer(top, push, 100%, 260px);
  }
}

@if index($drawer-directions, bottom) {
  .drawer-bottom {
    @include drawer(bottom, push, 100%, 260px);
  }
}

.drawer-active {
  transform: none !important;
  visibility: visible;
  opacity: 1;
}
